library('GGally')
library('lmtest')
library('FNN')
library('ISLR')
data(Carseats)

pairs(Carseats)

# константы
my.seed <- 12345
train.percent <- 0.85

Carseats.1 <- data.frame(Sales = Carseats$Sales, 
                         Price = Carseats$Price, 
                         Population = Carseats$Population,
                         Urban = Carseats$Urban) 

Carseats.1$Urban <- as.factor(Carseats.1$Urban)

# обучающая выборка
set.seed(my.seed)
inTrain <- sample(seq_along(Carseats.1$Sales), 
                  nrow(Carseats.1) * train.percent)
df.train <- Carseats.1[inTrain, c(colnames(Carseats.1)[-1], colnames(Carseats.1)[1])]
df.test <- Carseats.1[-inTrain, -1]
summary(df.train)

# совместный график разброса переменных
ggpairs(df.train)

# цвета по фактору 
ggpairs(df.train[, c('Price', 'Urban', 'Population')], 
        mapping = ggplot2::aes(color = Urban))
model.1 <- lm(Sales ~ . + Urban:Price + Urban:Population,
              data = df.train)
summary(model.1)
model.2 <- lm(Sales ~ . + Urban:Price,
              data = df.train)
summary(model.2)
model.3 <- lm(Sales ~ Price + Population,
              data = df.train)
summary(model.3)
model.4 <- lm(Sales ~ Price,
              data = df.train)
summary(model.4)
# тест Бройша-Пагана
bptest(model.4)

# статистика Дарбина-Уотсона
dwtest(model.4)

# графики остатков
par(mar = c(4.5, 4.5, 2, 1))
par(mfrow = c(1, 3))
plot(model.4, 1)
plot(model.4, 4)
plot(model.4, 5)
par(mfrow = c(1, 1))

# фактические значения y на тестовой выборке
# фактические значения y на тестовой выборке
y.fact <- Carseats.1[-inTrain, 1]
y.model.lm <- predict(model.4, df.test)
MSE.lm <- sum((y.model.lm - y.fact)^2) / length(y.model.lm)

# kNN требует на вход только числовые переменные
df.train$Urban <- as.numeric(df.train$Urban)
df.test$Urban <- as.numeric(df.test$Urban)

df.train.num <- as.data.frame(apply(df.train, 2, as.numeric))
df.test.num <- as.data.frame(apply(df.test, 2, as.numeric))

for (i in 2:50){
  model.knn <- knn.reg(train = df.train.num[, !(colnames(df.train.num) %in% 'Sales')], 
                       y = df.train.num[, 'Sales'], 
                       test = df.test.num, k = i)
  y.model.knn <- model.knn$pred
  if (i == 2){
    MSE.knn <- sum((y.model.knn - y.fact)^2) / length(y.model.knn)
  } else {
    MSE.knn <- c(MSE.knn, 
                 sum((y.model.knn - y.fact)^2) / length(y.model.knn))
  }
}

# график
par(mar = c(4.5, 4.5, 1, 1))
plot(2:50, MSE.knn, type = 'b', col = 'darkgreen',
     xlab = 'значение k', ylab = 'MSE на тестовой выборке')
lines(2:50, rep(MSE.lm, 49), lwd = 2, col = grey(0.2), lty = 2)
legend('bottomright', lty = c(1, 2), pch = c(1, NA), 
       col = c('darkgreen', grey(0.2)), 
       legend = c('k ближайших соседа', 'регрессия (все факторы)'), 
       lwd = rep(2, 2))
